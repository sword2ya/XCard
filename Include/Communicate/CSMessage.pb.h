// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CSMessage.proto

#ifndef PROTOBUF_CSMessage_2eproto__INCLUDED
#define PROTOBUF_CSMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "login.pb.h"
// @@protoc_insertion_point(includes)
namespace csmsg {
class TCSMessage;
class TCSMessageDefaultTypeInternal;
extern TCSMessageDefaultTypeInternal _TCSMessage_default_instance_;
class TMSG_LOGIN_REQ;
class TMSG_LOGIN_REQDefaultTypeInternal;
extern TMSG_LOGIN_REQDefaultTypeInternal _TMSG_LOGIN_REQ_default_instance_;
class TMSG_LOGIN_RSP;
class TMSG_LOGIN_RSPDefaultTypeInternal;
extern TMSG_LOGIN_RSPDefaultTypeInternal _TMSG_LOGIN_RSP_default_instance_;
}  // namespace csmsg

namespace csmsg {

namespace protobuf_CSMessage_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_CSMessage_2eproto

enum ECSMessageID {
  eMsgID_LoginReq = 1,
  eMsgID_LoginRsp = 2
};
bool ECSMessageID_IsValid(int value);
const ECSMessageID ECSMessageID_MIN = eMsgID_LoginReq;
const ECSMessageID ECSMessageID_MAX = eMsgID_LoginRsp;
const int ECSMessageID_ARRAYSIZE = ECSMessageID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ECSMessageID_descriptor();
inline const ::std::string& ECSMessageID_Name(ECSMessageID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ECSMessageID_descriptor(), value);
}
inline bool ECSMessageID_Parse(
    const ::std::string& name, ECSMessageID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ECSMessageID>(
    ECSMessageID_descriptor(), name, value);
}
// ===================================================================

class TCSMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:csmsg.TCSMessage) */ {
 public:
  TCSMessage();
  virtual ~TCSMessage();

  TCSMessage(const TCSMessage& from);

  inline TCSMessage& operator=(const TCSMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TCSMessage& default_instance();

  static inline const TCSMessage* internal_default_instance() {
    return reinterpret_cast<const TCSMessage*>(
               &_TCSMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(TCSMessage* other);

  // implements Message ----------------------------------------------

  inline TCSMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  TCSMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TCSMessage& from);
  void MergeFrom(const TCSMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TCSMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .csmsg.TMSG_LOGIN_REQ stLoginReq = 2;
  bool has_stloginreq() const;
  void clear_stloginreq();
  static const int kStLoginReqFieldNumber = 2;
  const ::csmsg::TMSG_LOGIN_REQ& stloginreq() const;
  ::csmsg::TMSG_LOGIN_REQ* mutable_stloginreq();
  ::csmsg::TMSG_LOGIN_REQ* release_stloginreq();
  void set_allocated_stloginreq(::csmsg::TMSG_LOGIN_REQ* stloginreq);

  // optional .csmsg.TMSG_LOGIN_RSP stLoginRsp = 3;
  bool has_stloginrsp() const;
  void clear_stloginrsp();
  static const int kStLoginRspFieldNumber = 3;
  const ::csmsg::TMSG_LOGIN_RSP& stloginrsp() const;
  ::csmsg::TMSG_LOGIN_RSP* mutable_stloginrsp();
  ::csmsg::TMSG_LOGIN_RSP* release_stloginrsp();
  void set_allocated_stloginrsp(::csmsg::TMSG_LOGIN_RSP* stloginrsp);

  // required .csmsg.ECSMessageID eMsgID = 1;
  bool has_emsgid() const;
  void clear_emsgid();
  static const int kEMsgIDFieldNumber = 1;
  ::csmsg::ECSMessageID emsgid() const;
  void set_emsgid(::csmsg::ECSMessageID value);

  // @@protoc_insertion_point(class_scope:csmsg.TCSMessage)
 private:
  void set_has_emsgid();
  void clear_has_emsgid();
  void set_has_stloginreq();
  void clear_has_stloginreq();
  void set_has_stloginrsp();
  void clear_has_stloginrsp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::csmsg::TMSG_LOGIN_REQ* stloginreq_;
  ::csmsg::TMSG_LOGIN_RSP* stloginrsp_;
  int emsgid_;
  friend struct protobuf_CSMessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// TCSMessage

// required .csmsg.ECSMessageID eMsgID = 1;
inline bool TCSMessage::has_emsgid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TCSMessage::set_has_emsgid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TCSMessage::clear_has_emsgid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TCSMessage::clear_emsgid() {
  emsgid_ = 1;
  clear_has_emsgid();
}
inline ::csmsg::ECSMessageID TCSMessage::emsgid() const {
  // @@protoc_insertion_point(field_get:csmsg.TCSMessage.eMsgID)
  return static_cast< ::csmsg::ECSMessageID >(emsgid_);
}
inline void TCSMessage::set_emsgid(::csmsg::ECSMessageID value) {
  assert(::csmsg::ECSMessageID_IsValid(value));
  set_has_emsgid();
  emsgid_ = value;
  // @@protoc_insertion_point(field_set:csmsg.TCSMessage.eMsgID)
}

// optional .csmsg.TMSG_LOGIN_REQ stLoginReq = 2;
inline bool TCSMessage::has_stloginreq() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TCSMessage::set_has_stloginreq() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TCSMessage::clear_has_stloginreq() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TCSMessage::clear_stloginreq() {
  if (stloginreq_ != NULL) stloginreq_->::csmsg::TMSG_LOGIN_REQ::Clear();
  clear_has_stloginreq();
}
inline const ::csmsg::TMSG_LOGIN_REQ& TCSMessage::stloginreq() const {
  // @@protoc_insertion_point(field_get:csmsg.TCSMessage.stLoginReq)
  return stloginreq_ != NULL ? *stloginreq_
                         : *::csmsg::TMSG_LOGIN_REQ::internal_default_instance();
}
inline ::csmsg::TMSG_LOGIN_REQ* TCSMessage::mutable_stloginreq() {
  set_has_stloginreq();
  if (stloginreq_ == NULL) {
    stloginreq_ = new ::csmsg::TMSG_LOGIN_REQ;
  }
  // @@protoc_insertion_point(field_mutable:csmsg.TCSMessage.stLoginReq)
  return stloginreq_;
}
inline ::csmsg::TMSG_LOGIN_REQ* TCSMessage::release_stloginreq() {
  // @@protoc_insertion_point(field_release:csmsg.TCSMessage.stLoginReq)
  clear_has_stloginreq();
  ::csmsg::TMSG_LOGIN_REQ* temp = stloginreq_;
  stloginreq_ = NULL;
  return temp;
}
inline void TCSMessage::set_allocated_stloginreq(::csmsg::TMSG_LOGIN_REQ* stloginreq) {
  delete stloginreq_;
  stloginreq_ = stloginreq;
  if (stloginreq) {
    set_has_stloginreq();
  } else {
    clear_has_stloginreq();
  }
  // @@protoc_insertion_point(field_set_allocated:csmsg.TCSMessage.stLoginReq)
}

// optional .csmsg.TMSG_LOGIN_RSP stLoginRsp = 3;
inline bool TCSMessage::has_stloginrsp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TCSMessage::set_has_stloginrsp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TCSMessage::clear_has_stloginrsp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TCSMessage::clear_stloginrsp() {
  if (stloginrsp_ != NULL) stloginrsp_->::csmsg::TMSG_LOGIN_RSP::Clear();
  clear_has_stloginrsp();
}
inline const ::csmsg::TMSG_LOGIN_RSP& TCSMessage::stloginrsp() const {
  // @@protoc_insertion_point(field_get:csmsg.TCSMessage.stLoginRsp)
  return stloginrsp_ != NULL ? *stloginrsp_
                         : *::csmsg::TMSG_LOGIN_RSP::internal_default_instance();
}
inline ::csmsg::TMSG_LOGIN_RSP* TCSMessage::mutable_stloginrsp() {
  set_has_stloginrsp();
  if (stloginrsp_ == NULL) {
    stloginrsp_ = new ::csmsg::TMSG_LOGIN_RSP;
  }
  // @@protoc_insertion_point(field_mutable:csmsg.TCSMessage.stLoginRsp)
  return stloginrsp_;
}
inline ::csmsg::TMSG_LOGIN_RSP* TCSMessage::release_stloginrsp() {
  // @@protoc_insertion_point(field_release:csmsg.TCSMessage.stLoginRsp)
  clear_has_stloginrsp();
  ::csmsg::TMSG_LOGIN_RSP* temp = stloginrsp_;
  stloginrsp_ = NULL;
  return temp;
}
inline void TCSMessage::set_allocated_stloginrsp(::csmsg::TMSG_LOGIN_RSP* stloginrsp) {
  delete stloginrsp_;
  stloginrsp_ = stloginrsp;
  if (stloginrsp) {
    set_has_stloginrsp();
  } else {
    clear_has_stloginrsp();
  }
  // @@protoc_insertion_point(field_set_allocated:csmsg.TCSMessage.stLoginRsp)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace csmsg

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::csmsg::ECSMessageID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::csmsg::ECSMessageID>() {
  return ::csmsg::ECSMessageID_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CSMessage_2eproto__INCLUDED
