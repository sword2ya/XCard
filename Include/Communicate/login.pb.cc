#include "stdafx.h" 
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: login.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "login.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace csmsg {
class TMSG_LOGIN_REQDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TMSG_LOGIN_REQ> {
} _TMSG_LOGIN_REQ_default_instance_;
class TMSG_LOGIN_RSPDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TMSG_LOGIN_RSP> {
} _TMSG_LOGIN_RSP_default_instance_;

namespace protobuf_login_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TMSG_LOGIN_REQ, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TMSG_LOGIN_REQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TMSG_LOGIN_REQ, nuserdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TMSG_LOGIN_REQ, strusername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TMSG_LOGIN_REQ, strpassword_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TMSG_LOGIN_RSP, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TMSG_LOGIN_RSP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TMSG_LOGIN_RSP, nuserdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TMSG_LOGIN_RSP, nerrcode_),
  0,
  1,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 8, sizeof(TMSG_LOGIN_REQ)},
  { 11, 18, sizeof(TMSG_LOGIN_RSP)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_TMSG_LOGIN_REQ_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TMSG_LOGIN_RSP_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "login.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _TMSG_LOGIN_REQ_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _TMSG_LOGIN_RSP_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _TMSG_LOGIN_REQ_default_instance_.DefaultConstruct();
  _TMSG_LOGIN_RSP_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\013login.proto\022\005csmsg\"M\n\016TMSG_LOGIN_REQ\022\021"
      "\n\tnUserData\030\001 \002(\r\022\023\n\013strUserName\030\002 \002(\t\022\023"
      "\n\013strPassword\030\003 \002(\t\"5\n\016TMSG_LOGIN_RSP\022\021\n"
      "\tnUserData\030\001 \002(\r\022\020\n\010nErrCode\030\002 \002(\005"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 154);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "login.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_login_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TMSG_LOGIN_REQ::kNUserDataFieldNumber;
const int TMSG_LOGIN_REQ::kStrUserNameFieldNumber;
const int TMSG_LOGIN_REQ::kStrPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TMSG_LOGIN_REQ::TMSG_LOGIN_REQ()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_login_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:csmsg.TMSG_LOGIN_REQ)
}
TMSG_LOGIN_REQ::TMSG_LOGIN_REQ(const TMSG_LOGIN_REQ& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_strusername()) {
    strusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strusername_);
  }
  strpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_strpassword()) {
    strpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strpassword_);
  }
  nuserdata_ = from.nuserdata_;
  // @@protoc_insertion_point(copy_constructor:csmsg.TMSG_LOGIN_REQ)
}

void TMSG_LOGIN_REQ::SharedCtor() {
  _cached_size_ = 0;
  strusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nuserdata_ = 0u;
}

TMSG_LOGIN_REQ::~TMSG_LOGIN_REQ() {
  // @@protoc_insertion_point(destructor:csmsg.TMSG_LOGIN_REQ)
  SharedDtor();
}

void TMSG_LOGIN_REQ::SharedDtor() {
  strusername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strpassword_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TMSG_LOGIN_REQ::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TMSG_LOGIN_REQ::descriptor() {
  protobuf_login_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_login_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TMSG_LOGIN_REQ& TMSG_LOGIN_REQ::default_instance() {
  protobuf_login_2eproto::InitDefaults();
  return *internal_default_instance();
}

TMSG_LOGIN_REQ* TMSG_LOGIN_REQ::New(::google::protobuf::Arena* arena) const {
  TMSG_LOGIN_REQ* n = new TMSG_LOGIN_REQ;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TMSG_LOGIN_REQ::Clear() {
// @@protoc_insertion_point(message_clear_start:csmsg.TMSG_LOGIN_REQ)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_strusername()) {
      GOOGLE_DCHECK(!strusername_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*strusername_.UnsafeRawStringPointer())->clear();
    }
    if (has_strpassword()) {
      GOOGLE_DCHECK(!strpassword_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*strpassword_.UnsafeRawStringPointer())->clear();
    }
  }
  nuserdata_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TMSG_LOGIN_REQ::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:csmsg.TMSG_LOGIN_REQ)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 nUserData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_nuserdata();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nuserdata_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string strUserName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strusername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->strusername().data(), this->strusername().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "csmsg.TMSG_LOGIN_REQ.strUserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string strPassword = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strpassword()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->strpassword().data(), this->strpassword().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "csmsg.TMSG_LOGIN_REQ.strPassword");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:csmsg.TMSG_LOGIN_REQ)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:csmsg.TMSG_LOGIN_REQ)
  return false;
#undef DO_
}

void TMSG_LOGIN_REQ::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:csmsg.TMSG_LOGIN_REQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 nUserData = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->nuserdata(), output);
  }

  // required string strUserName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->strusername().data(), this->strusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "csmsg.TMSG_LOGIN_REQ.strUserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strusername(), output);
  }

  // required string strPassword = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->strpassword().data(), this->strpassword().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "csmsg.TMSG_LOGIN_REQ.strPassword");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strpassword(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:csmsg.TMSG_LOGIN_REQ)
}

::google::protobuf::uint8* TMSG_LOGIN_REQ::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:csmsg.TMSG_LOGIN_REQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 nUserData = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->nuserdata(), target);
  }

  // required string strUserName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->strusername().data(), this->strusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "csmsg.TMSG_LOGIN_REQ.strUserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strusername(), target);
  }

  // required string strPassword = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->strpassword().data(), this->strpassword().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "csmsg.TMSG_LOGIN_REQ.strPassword");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strpassword(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csmsg.TMSG_LOGIN_REQ)
  return target;
}

size_t TMSG_LOGIN_REQ::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:csmsg.TMSG_LOGIN_REQ)
  size_t total_size = 0;

  if (has_strusername()) {
    // required string strUserName = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strusername());
  }

  if (has_strpassword()) {
    // required string strPassword = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strpassword());
  }

  if (has_nuserdata()) {
    // required uint32 nUserData = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nuserdata());
  }

  return total_size;
}
size_t TMSG_LOGIN_REQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csmsg.TMSG_LOGIN_REQ)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string strUserName = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strusername());

    // required string strPassword = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strpassword());

    // required uint32 nUserData = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nuserdata());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TMSG_LOGIN_REQ::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:csmsg.TMSG_LOGIN_REQ)
  GOOGLE_DCHECK_NE(&from, this);
  const TMSG_LOGIN_REQ* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TMSG_LOGIN_REQ>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:csmsg.TMSG_LOGIN_REQ)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:csmsg.TMSG_LOGIN_REQ)
    MergeFrom(*source);
  }
}

void TMSG_LOGIN_REQ::MergeFrom(const TMSG_LOGIN_REQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:csmsg.TMSG_LOGIN_REQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_strusername();
      strusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strusername_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_strpassword();
      strpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strpassword_);
    }
    if (cached_has_bits & 0x00000004u) {
      nuserdata_ = from.nuserdata_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TMSG_LOGIN_REQ::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:csmsg.TMSG_LOGIN_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TMSG_LOGIN_REQ::CopyFrom(const TMSG_LOGIN_REQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csmsg.TMSG_LOGIN_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TMSG_LOGIN_REQ::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void TMSG_LOGIN_REQ::Swap(TMSG_LOGIN_REQ* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TMSG_LOGIN_REQ::InternalSwap(TMSG_LOGIN_REQ* other) {
  strusername_.Swap(&other->strusername_);
  strpassword_.Swap(&other->strpassword_);
  std::swap(nuserdata_, other->nuserdata_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TMSG_LOGIN_REQ::GetMetadata() const {
  protobuf_login_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_login_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TMSG_LOGIN_REQ

// required uint32 nUserData = 1;
bool TMSG_LOGIN_REQ::has_nuserdata() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TMSG_LOGIN_REQ::set_has_nuserdata() {
  _has_bits_[0] |= 0x00000004u;
}
void TMSG_LOGIN_REQ::clear_has_nuserdata() {
  _has_bits_[0] &= ~0x00000004u;
}
void TMSG_LOGIN_REQ::clear_nuserdata() {
  nuserdata_ = 0u;
  clear_has_nuserdata();
}
::google::protobuf::uint32 TMSG_LOGIN_REQ::nuserdata() const {
  // @@protoc_insertion_point(field_get:csmsg.TMSG_LOGIN_REQ.nUserData)
  return nuserdata_;
}
void TMSG_LOGIN_REQ::set_nuserdata(::google::protobuf::uint32 value) {
  set_has_nuserdata();
  nuserdata_ = value;
  // @@protoc_insertion_point(field_set:csmsg.TMSG_LOGIN_REQ.nUserData)
}

// required string strUserName = 2;
bool TMSG_LOGIN_REQ::has_strusername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TMSG_LOGIN_REQ::set_has_strusername() {
  _has_bits_[0] |= 0x00000001u;
}
void TMSG_LOGIN_REQ::clear_has_strusername() {
  _has_bits_[0] &= ~0x00000001u;
}
void TMSG_LOGIN_REQ::clear_strusername() {
  strusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_strusername();
}
const ::std::string& TMSG_LOGIN_REQ::strusername() const {
  // @@protoc_insertion_point(field_get:csmsg.TMSG_LOGIN_REQ.strUserName)
  return strusername_.GetNoArena();
}
void TMSG_LOGIN_REQ::set_strusername(const ::std::string& value) {
  set_has_strusername();
  strusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:csmsg.TMSG_LOGIN_REQ.strUserName)
}
#if LANG_CXX11
void TMSG_LOGIN_REQ::set_strusername(::std::string&& value) {
  set_has_strusername();
  strusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:csmsg.TMSG_LOGIN_REQ.strUserName)
}
#endif
void TMSG_LOGIN_REQ::set_strusername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_strusername();
  strusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:csmsg.TMSG_LOGIN_REQ.strUserName)
}
void TMSG_LOGIN_REQ::set_strusername(const char* value, size_t size) {
  set_has_strusername();
  strusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:csmsg.TMSG_LOGIN_REQ.strUserName)
}
::std::string* TMSG_LOGIN_REQ::mutable_strusername() {
  set_has_strusername();
  // @@protoc_insertion_point(field_mutable:csmsg.TMSG_LOGIN_REQ.strUserName)
  return strusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TMSG_LOGIN_REQ::release_strusername() {
  // @@protoc_insertion_point(field_release:csmsg.TMSG_LOGIN_REQ.strUserName)
  clear_has_strusername();
  return strusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TMSG_LOGIN_REQ::set_allocated_strusername(::std::string* strusername) {
  if (strusername != NULL) {
    set_has_strusername();
  } else {
    clear_has_strusername();
  }
  strusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strusername);
  // @@protoc_insertion_point(field_set_allocated:csmsg.TMSG_LOGIN_REQ.strUserName)
}

// required string strPassword = 3;
bool TMSG_LOGIN_REQ::has_strpassword() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TMSG_LOGIN_REQ::set_has_strpassword() {
  _has_bits_[0] |= 0x00000002u;
}
void TMSG_LOGIN_REQ::clear_has_strpassword() {
  _has_bits_[0] &= ~0x00000002u;
}
void TMSG_LOGIN_REQ::clear_strpassword() {
  strpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_strpassword();
}
const ::std::string& TMSG_LOGIN_REQ::strpassword() const {
  // @@protoc_insertion_point(field_get:csmsg.TMSG_LOGIN_REQ.strPassword)
  return strpassword_.GetNoArena();
}
void TMSG_LOGIN_REQ::set_strpassword(const ::std::string& value) {
  set_has_strpassword();
  strpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:csmsg.TMSG_LOGIN_REQ.strPassword)
}
#if LANG_CXX11
void TMSG_LOGIN_REQ::set_strpassword(::std::string&& value) {
  set_has_strpassword();
  strpassword_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:csmsg.TMSG_LOGIN_REQ.strPassword)
}
#endif
void TMSG_LOGIN_REQ::set_strpassword(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_strpassword();
  strpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:csmsg.TMSG_LOGIN_REQ.strPassword)
}
void TMSG_LOGIN_REQ::set_strpassword(const char* value, size_t size) {
  set_has_strpassword();
  strpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:csmsg.TMSG_LOGIN_REQ.strPassword)
}
::std::string* TMSG_LOGIN_REQ::mutable_strpassword() {
  set_has_strpassword();
  // @@protoc_insertion_point(field_mutable:csmsg.TMSG_LOGIN_REQ.strPassword)
  return strpassword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TMSG_LOGIN_REQ::release_strpassword() {
  // @@protoc_insertion_point(field_release:csmsg.TMSG_LOGIN_REQ.strPassword)
  clear_has_strpassword();
  return strpassword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TMSG_LOGIN_REQ::set_allocated_strpassword(::std::string* strpassword) {
  if (strpassword != NULL) {
    set_has_strpassword();
  } else {
    clear_has_strpassword();
  }
  strpassword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strpassword);
  // @@protoc_insertion_point(field_set_allocated:csmsg.TMSG_LOGIN_REQ.strPassword)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TMSG_LOGIN_RSP::kNUserDataFieldNumber;
const int TMSG_LOGIN_RSP::kNErrCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TMSG_LOGIN_RSP::TMSG_LOGIN_RSP()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_login_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:csmsg.TMSG_LOGIN_RSP)
}
TMSG_LOGIN_RSP::TMSG_LOGIN_RSP(const TMSG_LOGIN_RSP& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&nuserdata_, &from.nuserdata_,
    reinterpret_cast<char*>(&nerrcode_) -
    reinterpret_cast<char*>(&nuserdata_) + sizeof(nerrcode_));
  // @@protoc_insertion_point(copy_constructor:csmsg.TMSG_LOGIN_RSP)
}

void TMSG_LOGIN_RSP::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&nuserdata_, 0, reinterpret_cast<char*>(&nerrcode_) -
    reinterpret_cast<char*>(&nuserdata_) + sizeof(nerrcode_));
}

TMSG_LOGIN_RSP::~TMSG_LOGIN_RSP() {
  // @@protoc_insertion_point(destructor:csmsg.TMSG_LOGIN_RSP)
  SharedDtor();
}

void TMSG_LOGIN_RSP::SharedDtor() {
}

void TMSG_LOGIN_RSP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TMSG_LOGIN_RSP::descriptor() {
  protobuf_login_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_login_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TMSG_LOGIN_RSP& TMSG_LOGIN_RSP::default_instance() {
  protobuf_login_2eproto::InitDefaults();
  return *internal_default_instance();
}

TMSG_LOGIN_RSP* TMSG_LOGIN_RSP::New(::google::protobuf::Arena* arena) const {
  TMSG_LOGIN_RSP* n = new TMSG_LOGIN_RSP;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TMSG_LOGIN_RSP::Clear() {
// @@protoc_insertion_point(message_clear_start:csmsg.TMSG_LOGIN_RSP)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&nuserdata_, 0, reinterpret_cast<char*>(&nerrcode_) -
      reinterpret_cast<char*>(&nuserdata_) + sizeof(nerrcode_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TMSG_LOGIN_RSP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:csmsg.TMSG_LOGIN_RSP)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 nUserData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_nuserdata();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nuserdata_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 nErrCode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_nerrcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nerrcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:csmsg.TMSG_LOGIN_RSP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:csmsg.TMSG_LOGIN_RSP)
  return false;
#undef DO_
}

void TMSG_LOGIN_RSP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:csmsg.TMSG_LOGIN_RSP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 nUserData = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->nuserdata(), output);
  }

  // required int32 nErrCode = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nerrcode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:csmsg.TMSG_LOGIN_RSP)
}

::google::protobuf::uint8* TMSG_LOGIN_RSP::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:csmsg.TMSG_LOGIN_RSP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 nUserData = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->nuserdata(), target);
  }

  // required int32 nErrCode = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nerrcode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csmsg.TMSG_LOGIN_RSP)
  return target;
}

size_t TMSG_LOGIN_RSP::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:csmsg.TMSG_LOGIN_RSP)
  size_t total_size = 0;

  if (has_nuserdata()) {
    // required uint32 nUserData = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nuserdata());
  }

  if (has_nerrcode()) {
    // required int32 nErrCode = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nerrcode());
  }

  return total_size;
}
size_t TMSG_LOGIN_RSP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csmsg.TMSG_LOGIN_RSP)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 nUserData = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nuserdata());

    // required int32 nErrCode = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nerrcode());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TMSG_LOGIN_RSP::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:csmsg.TMSG_LOGIN_RSP)
  GOOGLE_DCHECK_NE(&from, this);
  const TMSG_LOGIN_RSP* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TMSG_LOGIN_RSP>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:csmsg.TMSG_LOGIN_RSP)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:csmsg.TMSG_LOGIN_RSP)
    MergeFrom(*source);
  }
}

void TMSG_LOGIN_RSP::MergeFrom(const TMSG_LOGIN_RSP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:csmsg.TMSG_LOGIN_RSP)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      nuserdata_ = from.nuserdata_;
    }
    if (cached_has_bits & 0x00000002u) {
      nerrcode_ = from.nerrcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TMSG_LOGIN_RSP::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:csmsg.TMSG_LOGIN_RSP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TMSG_LOGIN_RSP::CopyFrom(const TMSG_LOGIN_RSP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csmsg.TMSG_LOGIN_RSP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TMSG_LOGIN_RSP::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void TMSG_LOGIN_RSP::Swap(TMSG_LOGIN_RSP* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TMSG_LOGIN_RSP::InternalSwap(TMSG_LOGIN_RSP* other) {
  std::swap(nuserdata_, other->nuserdata_);
  std::swap(nerrcode_, other->nerrcode_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TMSG_LOGIN_RSP::GetMetadata() const {
  protobuf_login_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_login_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TMSG_LOGIN_RSP

// required uint32 nUserData = 1;
bool TMSG_LOGIN_RSP::has_nuserdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TMSG_LOGIN_RSP::set_has_nuserdata() {
  _has_bits_[0] |= 0x00000001u;
}
void TMSG_LOGIN_RSP::clear_has_nuserdata() {
  _has_bits_[0] &= ~0x00000001u;
}
void TMSG_LOGIN_RSP::clear_nuserdata() {
  nuserdata_ = 0u;
  clear_has_nuserdata();
}
::google::protobuf::uint32 TMSG_LOGIN_RSP::nuserdata() const {
  // @@protoc_insertion_point(field_get:csmsg.TMSG_LOGIN_RSP.nUserData)
  return nuserdata_;
}
void TMSG_LOGIN_RSP::set_nuserdata(::google::protobuf::uint32 value) {
  set_has_nuserdata();
  nuserdata_ = value;
  // @@protoc_insertion_point(field_set:csmsg.TMSG_LOGIN_RSP.nUserData)
}

// required int32 nErrCode = 2;
bool TMSG_LOGIN_RSP::has_nerrcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TMSG_LOGIN_RSP::set_has_nerrcode() {
  _has_bits_[0] |= 0x00000002u;
}
void TMSG_LOGIN_RSP::clear_has_nerrcode() {
  _has_bits_[0] &= ~0x00000002u;
}
void TMSG_LOGIN_RSP::clear_nerrcode() {
  nerrcode_ = 0;
  clear_has_nerrcode();
}
::google::protobuf::int32 TMSG_LOGIN_RSP::nerrcode() const {
  // @@protoc_insertion_point(field_get:csmsg.TMSG_LOGIN_RSP.nErrCode)
  return nerrcode_;
}
void TMSG_LOGIN_RSP::set_nerrcode(::google::protobuf::int32 value) {
  set_has_nerrcode();
  nerrcode_ = value;
  // @@protoc_insertion_point(field_set:csmsg.TMSG_LOGIN_RSP.nErrCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace csmsg

// @@protoc_insertion_point(global_scope)
